#ifndef EVAL_HPP_INCLUDE
#define EVAL_HPP_INCLUDE

#include <array>

#include "../include/board.hpp"
#include "../include/bitboard_math.hpp"

#define DBL_PAWNS_PEN -8
#define TRI_PAWNS_PEN -10
#define PASS_PAWNS_BONUS 17
#define ISO_PAWNS_PEN -10
#define HALF_ISO_PAWNS_PEN -4

#define OPEN_FILE_ROOKS_BONUS 10
#define HALF_OPEN_FILE_ROOKS_BONUS 5

constexpr std::array<Score, 5> material = { 100, 320, 330, 500, 900 };

constexpr std::array<std::array<Score, 64>, 2> pawn_psqt = {{
    {
         0,  0,  0,  0,  0,  0,  0,  0,
        50, 50, 50, 50, 50, 50, 50, 50,
        10, 10, 20, 30, 30, 20, 10, 10,
         5,  5, 10, 25, 25, 10,  5,  5,
         0,  0,  0, 20, 20,  0,  0,  0,
         2, -5,-10, -5, -5, -7, -5,  2,
         5, 10, 10,-20,-20, 10, 10,  5,
         0,  0,  0,  0,  0,  0,  0,  0
    },
    {
         0,  0,  0,  0,  0,  0,  0,  0,
        80, 90, 90, 90, 90, 90, 90, 80,
        70, 80, 80, 80, 80, 80, 80, 70,
        60, 70, 70, 70, 70, 70, 70, 60,
        55, 55, 55, 55, 55, 55, 55, 55,
        50, 50, 50, 50, 50, 50, 50, 50,
         0,  0,  0,  0,  0,  0,  0,  0,
         0,  0,  0,  0,  0,  0,  0,  0
    }
}};

constexpr std::array<Score, 64> knight_psqt = {
    -50,-20,-30,-30,-30,-30,-20,-50,
    -40,-20,  0,  0,  0,  0,-20,-40,
    -30,  7, 13, 10, 10, 13,  7,-30,
    -30,  2, 12, 17, 17, 12,  2,-30,
    -30,  0, 12, 17, 17, 12,  0,-30,
    -30,  7, 13, 10, 10, 13,  7,-30,
    -40,-20,  0,  5,  5,  0,-20,-40,
    -50,-20,-30,-30,-30,-30,-20,-50
};

constexpr std::array<Score, 64> bishop_psqt = {
    -20,-10,-10,-10,-10,-10,-10,-20,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -10,  0,  5, 10, 10,  5,  0,-10,
    -10,  5,  5, 10, 10,  5,  5,-10,
    -10,  0, 12, 10, 10, 12,  0,-10,
    -10, 10,  7, 12, 12,  7, 10,-10,
    -10,  5,  0,  0,  0,  0,  5,-10,
    -20,-10,-10,-10,-10,-10,-10,-20
};

constexpr std::array<Score, 64> rook_psqt = {
    0,  0,  0,  0,  0,  0,  0,  0,
    5, 10, 10, 10, 10, 10, 10,  5,
    -5,  0,  0,  0,  0,  0,  0, -5,
    -5,  0,  0,  0,  0,  0,  0, -5,
    -5,  0,  0,  0,  0,  0,  0, -5,
    -5,  0,  0,  0,  0,  0,  0, -5,
    -5,  0,  0,  0,  0,  0,  0, -5,
    0,  0,   0,  5,  5,  0,  0,  0
};

constexpr std::array<Score, 64> queen_psqt = {
    -20,-10,-10, -5, -5,-10,-10,-20,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -10,  0,  5,  5,  5,  5,  0,-10,
    -5,  0,  5,  5,  5,  5,  0, -5,
        0,  0,  5,  5,  5,  5,  0, -5,
    -10,  5,  5,  5,  5,  5,  0,-10,
    -10,  0,  5,  0,  0,  0,  0,-10,
    -20,-10,-10, -5, -5,-10,-10,-20
};

constexpr std::array<std::array<Score, 64>, 2> king_psqt = {{
    {
        -30,-40,-40,-50,-50,-40,-40,-30,
        -30,-40,-40,-50,-50,-40,-40,-30,
        -30,-40,-40,-50,-50,-40,-40,-30,
        -30,-40,-40,-50,-50,-40,-40,-30,
        -20,-30,-30,-40,-40,-30,-30,-20,
        -10,-20,-20,-20,-20,-20,-20,-10,
        20, 20, -5, -5, -5, -5, 20, 20,
        20, 30, 10,  0,  0,  7, 27, 17
    },
    {
        -50,-40,-30,-20,-20,-30,-40,-50,
        -30,-20,-10,  0,  0,-10,-20,-30,
        -30,-10, 20, 30, 30, 20,-10,-30,
        -30,-10, 30, 40, 40, 30,-10,-30,
        -30,-10, 30, 40, 40, 30,-10,-30,
        -30,-10, 20, 30, 30, 20,-10,-30,
        -30,-30,  0,  0,  0,  0,-30,-30,
        -50,-30,-30,-30,-30,-30,-30,-50
    }
}};




#endif